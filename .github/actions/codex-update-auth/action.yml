name: Refresh Codex auth secret
description: Update the CODEX_AUTH GitHub secret if the local auth.json changed.
inputs:
  codex_auth_path:
    description: Path to the Codex auth.json file
    required: true
  original_codex_auth:
    description: Path to the original auth snapshot for comparison
    required: false
  gh_token:
    description: Token with permission to update repository secrets
    required: false
  repository:
    description: Target repository (owner/name)
    required: true
runs:
  using: composite
  steps:
    - id: refresh
      shell: bash
      env:
        CODEX_AUTH_PATH: ${{ inputs.codex_auth_path }}
        ORIGINAL_CODEX_AUTH: ${{ inputs.original_codex_auth }}
        GH_TOKEN: ${{ inputs.gh_token }}
        GITHUB_REPOSITORY: ${{ inputs.repository }}
      run: |
        set -euo pipefail

        if [[ -z "${GH_TOKEN:-}" ]]; then
          echo "Skipping secret refresh (GH_TOKEN not provided)."
          exit 0
        fi

        if [[ -z "${CODEX_AUTH_PATH:-}" || ! -f "$CODEX_AUTH_PATH" ]]; then
          echo "Skipping secret refresh (auth file not found)."
          exit 0
        fi

        if [[ -z "${ORIGINAL_CODEX_AUTH:-}" || ! -f "$ORIGINAL_CODEX_AUTH" ]]; then
          echo "Original auth snapshot missing; skipping secret refresh."
          exit 0
        fi

        if cmp -s "$ORIGINAL_CODEX_AUTH" "$CODEX_AUTH_PATH"; then
          echo "Codex auth unchanged; no secret update needed."
          exit 0
        fi

        echo "::notice::Codex auth.json changed; refreshing CODEX_AUTH secret via GitHub REST API."
        python -m pip install --quiet pynacl
        read_key_output="$(gh api repos/${GITHUB_REPOSITORY}/actions/secrets/public-key --jq '[.key_id, .key] | @tsv')"
        IFS=$'\t' read -r key_id public_key <<<"$read_key_output"

        encrypted_value=$(PUBLIC_KEY="$public_key" AUTH_PATH="$CODEX_AUTH_PATH" python - <<'PY'
import base64
import os
from pathlib import Path
from nacl import public

key = base64.b64decode(os.environ["PUBLIC_KEY"])
auth = Path(os.environ["AUTH_PATH"]).read_bytes()
sealed = public.SealedBox(public.PublicKey(key))
print(base64.b64encode(sealed.encrypt(auth)).decode())
PY
)

        gh api --method PUT \
          repos/${GITHUB_REPOSITORY}/actions/secrets/CODEX_AUTH \
          -H "Accept: application/vnd.github+json" \
          -f encrypted_value="$encrypted_value" \
          -f key_id="$key_id"

        echo "Updated CODEX_AUTH secret via REST API."
