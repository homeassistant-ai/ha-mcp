name: Run Codex sync remediation
description: Execute Codex in full-auto mode with the standard ha-mcp remediation prompt.
inputs:
  prompt:
    description: Base prompt to feed into Codex.
    required: true
  pr-context:
    description: Optional textual pull request context to append to the prompt.
    required: false
outputs:
  summary_markdown:
    description: Markdown bullet list summarising Codex changes
    value: ${{ steps.parse.outputs.summary_md }}
  testing_markdown:
    description: Markdown bullet list of Codex-reported tests
    value: ${{ steps.parse.outputs.testing_md }}
runs:
  using: composite
  steps:
    - id: generate
      shell: bash
      env:
        PROMPT_TEXT: ${{ inputs.prompt }}
        PR_CONTEXT: ${{ inputs.pr-context }}
        RUNNER_TEMP: ${{ runner.temp }}
      run: |
        set -euo pipefail

        temp_dir="${RUNNER_TEMP:-$(mktemp -d)}"
        schema="$temp_dir/codex-output-schema.json"
        cat <<'JSON' > "$schema"
{
  "type": "object",
  "properties": {
    "summary": { "type": "array", "items": { "type": "string" } },
    "testing": { "type": "array", "items": { "type": "string" } }
  },
  "required": ["summary", "testing"],
  "additionalProperties": false
}
JSON

        prompt_file="$(mktemp)"
        printf '%s' "${PROMPT_TEXT}" > "$prompt_file"
        printf '\n' >> "$prompt_file"

        if [[ -n "${PR_CONTEXT:-}" ]]; then
          {
            echo ""
            echo "Pull request context:"
            printf '%s\n' "$PR_CONTEXT"
          } >> "$prompt_file"
        fi

        output_file="$temp_dir/codex-output.json"
        export CODEX_QUIET_MODE=1
        codex exec \
          --full-auto \
          --skip-git-repo-check \
          --output-schema "$schema" \
          -o "$output_file" \
          - < "$prompt_file"

        echo "output_path=$output_file" >> "$GITHUB_OUTPUT"

    - id: parse
      shell: bash
      env:
        OUTPUT_PATH: ${{ steps.generate.outputs.output_path }}
      run: |
        set -euo pipefail
        if [[ -z "${OUTPUT_PATH:-}" || ! -f "$OUTPUT_PATH" ]]; then
          echo "Codex output file missing" >&2
          exit 1
        fi

        python - <<'PY'
import json
import os

path = os.environ['OUTPUT_PATH']
with open(path, 'r', encoding='utf-8') as fh:
    data = json.load(fh)
summary = data.get('summary') or []
testing = data.get('testing') or []
summary_md = '\n'.join(f"- {item}" for item in summary) or '- Codex did not provide a summary.'
testing_md = '\n'.join(f"- {item}" for item in testing) or '- Codex did not report any tests.'
with open(os.environ['GITHUB_OUTPUT'], 'a', encoding='utf-8') as out:
    out.write(f"summary_md<<EOF\n{summary_md}\nEOF\n")
    out.write(f"testing_md<<EOF\n{testing_md}\nEOF\n")
PY
